name: CI/CD Pipeline for PHP MVC + Nginx

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout 最新程式碼
        uses: actions/checkout@v3

      - name: 🔐 SSH 登入 EC2 並測試
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: echo "✅ 成功登入 EC2"

      - name: 🔐 解碼 SSH 金鑰
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_EC2_PRIVATE_KEY_BASE64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.AWS_EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 👀 顯示 SSH 金鑰權限與內容
        run: |
          ls -l ~/.ssh
          head -5 ~/.ssh/id_rsa

      - name: 🧪 測試 SSH 連線
        run: |
          ssh -vvv -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }} "echo '✅ 成功連線到 EC2！'"

      - name: 🔐 Docker 登入
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📁 建立 EC2 資料夾和權限
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /home/ec2-user/MemberSystemMVC/public
            sudo chown -R ec2-user:ec2-user /home/ec2-user/MemberSystemMVC
            sudo chmod -R 755 /home/ec2-user/MemberSystemMVC

      - name: 🔥 刪除 default.conf 資料夾/檔案
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            if [ -e /home/ec2-user/MemberSystemMVC/nginx/default.conf ]; then
              echo "刪除 default.conf (file or dir)"
              rm -rf /home/ec2-user/MemberSystemMVC/nginx/default.conf
            fi

      - name: 📦 上傳 default.conf 至 EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: "./nginx"
          target: "/home/ec2-user/MemberSystemMVC"
          

      - name: 📝 建立 .env 檔案
        run: |
          rm -f .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "JWT_ALGO=${{ secrets.JWT_ALGO }}" >> .env
          echo "SUPER_SECRET_KEY=${{ secrets.SUPER_SECRET_KEY }}" >> .env
          echo "PHP_MAILER=${{ secrets.PHP_MAILER }}" >> .env
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
          echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> .env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> .env
          echo "---- ✅ .env 最終內容如下 ----"
          cat .env

      - name: 📤 上傳 .env 到 EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: ".env"
          target: "/home/ec2-user/MemberSystemMVC"

      - name: 🕵️ 檢查 EC2 上的 .env 內容
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            echo "---- ✅ EC2 上的 .env 檔案 ----"
            cat /home/ec2-user/MemberSystemMVC/.env || echo "❌ 檔案不存在"




      - name: 🚀 建立並推送 Docker Image
        run: |
          docker build -t my-mvc-php-app .
          docker tag my-mvc-php-app ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:latest

      - name: 🚢 部署 Docker 到 AWS EC2（使用 --env-file）
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo systemctl start docker
            set -x
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:latest

            docker stop my-mvc-php-app nginx_server || true
            docker rm my-mvc-php-app nginx_server || true

            containers=$(docker ps -a --filter "publish=80" -q)
            [ -n "$containers" ] && docker rm -f $containers || true

            pid=$(lsof -t -i :80 || true)
            [ -n "$pid" ] && kill -9 $pid || true

            docker network inspect my-net >/dev/null 2>&1 || docker network create my-net

            # ✅ 改用 --env-file 方式讀取 .env
            docker run -d --name my-mvc-php-app \
              --network my-net \
              --env-file /home/ec2-user/MemberSystemMVC/.env \
              ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:latest

            docker run -d --name nginx_server \
              --network my-net \
              -p 80:80 \
              -p 443:443 \
              -v /home/ec2-user/MemberSystemMVC/nginx/default.conf:/etc/nginx/conf.d/default.conf \
              -v /home/ec2-user/MemberSystemMVC/public:/var/www/html \
              -v /var/www/certbot:/var/www/certbot \
              -v /etc/letsencrypt:/etc/letsencrypt \
              nginx

            sleep 5
            docker ps

            echo "\u2705 成功部署 http://${{ secrets.AWS_EC2_HOST }}:80"
            docker exec nginx_server grep fastcgi_pass /etc/nginx/conf.d/default.conf || echo "⚠️ Nginx 未正常啟動 or config 錯誤"
