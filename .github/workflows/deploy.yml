name: CI/CD Pipeline for PHP MVC + Nginx (Docker Image Deploy)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout Code
        uses: actions/checkout@v3

      - name: ⏰ 設定 Docker 圖像 tag 為日期 + 選項遞增版本
        id: docker_tag
        run: |
          git fetch --tags
          TODAY=$(date +'%Y%m%d')
          TAGS=$(git tag | grep "${TODAY}_V" || true)
          if [[ -z "$TAGS" ]]; then
            VERSION=1
          else
            VERSION=$(echo "$TAGS" | sed -E "s/${TODAY}_V([0-9]+)/\1/" | sort -nr | head -n 1)
            VERSION=$((VERSION + 1))
          fi
          TAG="${TODAY}_V${VERSION}"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: 🔐 Docker 登入
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🚀 建立並推送 Docker 圖像
        run: |
          docker image rm -f ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:latest || true
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:${{ env.TAG }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:${{ env.TAG }} ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:${{ env.TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:latest
          docker image prune -f

      - name: 🔖 打 Git tag 並推送
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}

      - name: 📆 上傳 public 目錄
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: "public/index.php,public/assets"
          target: "/home/ec2-user/MemberSystemMVC/"

      - name: 📂 建立目錄
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            mkdir -p /home/ec2-user/MemberSystemMVC/nginx
            sudo chown -R ec2-user:www-data /home/ec2-user/MemberSystemMVC
            sudo chmod -R 775 /home/ec2-user/MemberSystemMVC

      - name: 🔐 設定 public 權限
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo chown -R ec2-user:ec2-user /home/ec2-user/MemberSystemMVC/public
            sudo chmod -R 775 /home/ec2-user/MemberSystemMVC/public

      - name: 🖍️ 用 secrets 產生 .env
        run: |
          mkdir -p MemberSystemMVC
          cat <<EOF > .env
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          JWT_ALGO=${{ secrets.JWT_ALGO }}
          SUPER_SECRET_KEY=${{ secrets.SUPER_SECRET_KEY }}
          PHP_MAILER=${{ secrets.PHP_MAILER }}
          CLIENT_ID=${{ secrets.CLIENT_ID }}
          REDIRECT_URI=${{ secrets.REDIRECT_URI }}
          CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
          EOF

      - name: 📄 上傳 .env
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: ".env"
          target: "/home/ec2-user/MemberSystemMVC/"

      - name: 📃 上傳 nginx config
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          source: "nginx/default.conf"
          target: "/home/ec2-user/MemberSystemMVC/"

      - name: 📁 備份 .env
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            mkdir -p /home/ec2-user/MemberSystemMVC_backup.env
            cp /home/ec2-user/MemberSystemMVC/.env /home/ec2-user/MemberSystemMVC_backup.env/.env.bak
            sudo chown -R ec2-user:www-data /home/ec2-user/MemberSystemMVC_backup.env
            sudo chmod -R 775 /home/ec2-user/MemberSystemMVC_backup.env

      - name: 🌐 部署 Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo systemctl start docker
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:latest
            docker stop my-mvc-php-app nginx_server || true
            docker rm my-mvc-php-app nginx_server || true
            docker network inspect my-net >/dev/null 2>&1 || docker network create my-net
            docker run -d --name my-mvc-php-app \
              --network laravel-net \
              --restart unless-stopped \
              -v /home/ec2-user/MemberSystemMVC/.env:/var/www/html/.env \
              -v /home/ec2-user/MemberSystemMVC/public/uploads/avatars:/var/www/html/public/uploads/avatars \
              ${{ secrets.DOCKER_USERNAME }}/my-mvc-php-app:latest
            sleep 5
 

      - name: 🩹 清理 EC2 上無用 Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            docker image prune -f

      - name: ⚙️ 修正 PHP 上傳暫存資料夾 + 權限
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            docker exec my-mvc-php-app bash -c "\
            echo -e 'upload_tmp_dir=/tmp\nupload_max_filesize=10M\npost_max_size=20M' > /usr/local/etc/php/conf.d/uploads.ini && \
            kill -USR2 1"

      - name: 🔐 修正 uploads 權限
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script: |
            sudo chown -R ec2-user:ec2-user /home/ec2-user/MemberSystemMVC/public/uploads
            sudo chmod -R 775 /home/ec2-user/MemberSystemMVC/public/uploads
            docker exec my-mvc-php-app bash -c "
              chown -R www-data:www-data /var/www/html/public/uploads && \
              chmod -R 775 /var/www/html/public/uploads"
            echo "✅ 權限修正完成"
